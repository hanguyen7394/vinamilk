
  @mixin left($value) {  left: $value;  }
  @mixin right($value) {  right: $value;  }
  @mixin mgR($value) {  margin-right: $value;  }
  @mixin mgL($value) {  margin-left: $value;  }
  @mixin pdR($value) {  padding-right: $value;  }
  @mixin pdL($value) {  padding-left: $value;  }
  @mixin bdL($value) {  border-left: $value;  }
  @mixin bdR($value) {  border-right: $value;  }
  @mixin bdLC($value) {  border-left-color: $value;  }
  @mixin bdRC($value) {  border-right-color: $value;  }


@mixin arrowLeft($x,$y,$z) {
     content: ""; 
      border-style: solid;  
      border-width: $x 0 $x $y;
      border-color: transparent transparent transparent $z;   
    
  }
  @mixin arrowRight($x,$y,$z) {
     content: ""; 
      border-style: solid;  
      border-width: $x $y $x 0; 
      border-color: transparent $z transparent transparent ;   
  }





@mixin clearfix {
  &:after {    content: "";    display: table;    clear: both;  }
}

@mixin visuallyHidden {  clip: rect(0 0 0 0);  clip: rect(0, 0, 0, 0);  overflow: hidden;  position: absolute;  height: 1px;  width: 1px;}
@mixin prefix($property, $value) {  -webkit-#{$property}: #{$value};  -moz-#{$property}: #{$value};  -ms-#{$property}: #{$value};  -o-#{$property}: #{$value};  #{$property}: #{$value};}
@mixin transition($value) {  transition: all $value ease-in-out;  -webkit-transition: all $value ease-in-out;}
@mixin transitionC($value1, $value2) {  transition: all $value1 ease-in-out $value2;  -webkit-transition: all $value1 ease-in-out $value2;}
@mixin translateName($value) {  animation-name: $value;    -webkit-animation-name: $value;}
@mixin translateDuration($value) {  animation-duration: $value;    -webkit-animation-duration: $value;}
@mixin translate($x,$y) {  transform: translate($x,$y);  -webkit-transform: translate($x,$y);}
@mixin translateX($x) {  transform: translateX($x);  -webkit-transform: translateX($x);}
@mixin translateY($y) {  transform: translateY($y);  -webkit-transform: translateY($y);}
@mixin rotate($value) {  transform: rotate($value);  -webkit-transform: rotate($value);}
@mixin gradient($rightom, $to, $fallback) {  background: $fallback;  background: -moz-linear-gradient(top, $rightom 0%, $to 100%);  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$rightom), color-stop(100%,$to));  background: -webkit-linear-gradient(top, $rightom 0%,$to 100%);  background: -o-linear-gradient(top, $rightom 0%,$to 100%);  background: -ms-linear-gradient(top, $rightom 0%,$to 100%);  background: linear-gradient(top bottom, $rightom 0%,$to 100%);}
@mixin gradient2($rightom, $fallback) {  background-color: $fallback;  background-repeat: repeat-x;  background-image: -khtml-gradient(linear, left top, left bottom, from($rightom), to($fallback));  background-image: -moz-linear-gradient(top, $rightom, $fallback);  background-image: -ms-linear-gradient(top, $rightom, $fallback);  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $rightom), color-stop(100%, $fallback));  background-image: -webkit-linear-gradient(top, $rightom, $fallback);  background-image: -o-linear-gradient(top, $rightom, $fallback);  background-image: linear-gradient(top, $rightom, $fallback);  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$rightom', endColorstr='$fallback', GradientType=0); }
@mixin backface($visibility: hidden) {  @include prefix('backface-visibility', #{$visibility});}
@mixin box-sizing($box-sizing: border-box) {  -webkit-box-sizing: #{$box-sizing};  -moz-box-sizing: #{$box-sizing};  box-sizing: #{$box-sizing};}
@mixin animation($animation) {  -webkit-animation: $animation;  -moz-animation:    $animation;  -o-animation:      $animation;  animation:         $animation;}
@mixin border-radius($value) { border-radius: $value; -webkit-border-radius: $value; -moz-border-radius: $value; }

@keyframes scrollDownArrow{
  0%{
    bottom: -5px;
  }
  25%{
    bottom: -10px;
  }
  50%{
    bottom: -15px;
  }
  75%{
    bottom: -10px;
  }
  100%{
    bottom: -5px;
  }
}
